package test16;

public class InnerClass {

	// 내부 클래스의 종류 => 선언된 위치에 따라 구분
	
	/* 1. 인스턴스 내부 클래스(Instance inner class) => InnerTest2.java
	 * 내부 클래스명을 지정할 때 아무 예약어(지시어)도 붙어 있지 않은 클래스
	 * 외부 클래스 영역에 선언한 클래스 중 static 키워드를 가지지 않은 클래스 
	 *  
	 * 주로 외부 클래스의 인스턴스 변수나 인스턴스 메소드에 사용될 목적으로 선언
	 * 외부 클래스 내부에서만 생성하여 사용하는 객체를 선언할 때 사용
	 * 어떤 클래스 내에 여러 변수가 있고 이를 변수 중 일부를 모아 클래스로 표현할 수 있음
	 * 내부 클래스를 감싸고 있는 외부 클래스에서만 사용하기 위해서 사용
	 * 다른 클래스에서 private이 아닌 내부 클래스를 생성할 수 있음
	 * 외부 클래스의 내부에서만 사용할 목적이라면 내부 클래스를 private으로 선언
	 * @외부 클래스 생성해야만 내부 클래스를 생성할 수 있음
	 * @외부 클래스를 먼저 생성하지 않고 인스턴스 내부 클래스를 사용할 수 없음
	 */
	
	/* 2. 정적 내부 클래스(Static inner class) => InnerTest3.java
	 * 외부 클래스 영역에 선언된 내부 클래스 중에서 static 키워드를 가진 클래스
	 * 주로 외부 클래스(outer class)의 클래스(정적) 변수나 인스턴스 메소드에서 사용될 목적으로 선언
	 * 
	 * 내부 클래스가 외부 클래스 생성과 무관하게 사용할 수 있어야하고 정적 변수도 사용할 수 있도록 하는 것
	 * 외부 클래스를 먼저 생성하지 않고 인스턴스 내부 클래스를 생성하고 사용할 수 있음
	 */
	
	/* 3. 지역 내부 클래스(Local inner class) => InnerTest4.java
	 * 외부 클래스의 메소드나 초기화 블록에 선언된 클래스를 의미
	 * 지역 내부 클래스는 선언된 메소드 블록 내에서만 사용할 수 있음
	 * 
	 * 지역 변수처럼 메소드 내부에 클래스를 정의하여 사용하는 것
	 * 메소드나 초기화 블록의 내부에서 지역변수처럼 다루어지고 선언된 영역 내부에서 사용할 수 있는 클래스
	 * 객체를 메소드 블록 내에서 생성
	 */
	
	/* 4. 익명 내부 클래스(Anonymous inner class) => InnerTest5.java, InnerTest6.java
	 * 다른 내부 클래스와 달리 이름을 가지지 않는 클래스를 의미
	 * 클래스 서언과 동시에 객체를 생성하므로 하나의 객체만으로 생성하는 일회용 클래스
	 * 생성자를 선언할 수 없고 하나의 클래스나 인터페이스를 상속받거나 구현할 수 있음
	 * 매우 제한적인 용도에 사용되고 구현해야 하는 메소드가 매우 적은 클래스를 구현 할 때 사용
	 */
	
}
